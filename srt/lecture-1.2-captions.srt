1
00:00:00,600 --> 00:00:06,060
Hello, welcome to the short training 1.2

2
00:00:06,060 --> 00:00:12,660
this video provides an overview of issue tracking systems (IST) and 

3
00:00:12,660 --> 00:00:17,520
how these systems can be adapted to manage custom issues and custom relationships

4
00:00:17,520 --> 00:00:23,220
we introduce some general concepts, describe basic usage and show how

5
00:00:23,220 --> 00:00:28,500
these tools serve you to search and filter information related to project management

6
00:00:30,540 --> 00:00:36,840
an IST is a software system for managing the lifecycle of a set of issues.

7
00:00:36,840 --> 00:00:42,780
issues can represent a lot of different information related to a software project

8
00:00:42,780 --> 00:00:47,580
these systems are widely adopted as a collaborative project management tool,

9
00:00:47,580 --> 00:00:50,760
and they can record different kinds of information,

10
00:00:50,760 --> 00:00:55,740
an IST can also be used as a repository of project's knowledge

11
00:00:57,660 --> 00:01:00,900
Issue tracking normally are part of 

12
00:01:00,900 --> 00:01:04,440
ALM tools, which are used to manage the entire lifecycle of a product

13
00:01:04,440 --> 00:01:08,820
in many cases, teams and organizations may use only

14
00:01:08,820 --> 00:01:11,820
the issue tracking system as the management tool

15
00:01:11,820 --> 00:01:20,700
Issue is the unit of work registered for management purposes

16
00:01:20,700 --> 00:01:27,780
In the remainder of this video, we will use the term "item" to refer to an "issue"

17
00:01:30,060 --> 00:01:34,560
Issues can represent a variety of information that a team decides to track:

18
00:01:34,560 --> 00:01:38,820
bugs, change requests, tasks, etc.

19
00:01:39,960 --> 00:01:46,860
the Atlassian Jira tool has predefined types of

20
00:01:46,860 --> 00:01:51,300
issues that cover the basic needs of a software development project

21
00:01:54,300 --> 00:01:59,220
an issue link is a bi-directional association that creates an

22
00:01:59,220 --> 00:02:01,020
relationship between two issues

23
00:02:01,020 --> 00:02:08,460
the Atlassian Jira tool has pre-defined link types focused on basic issue management

24
00:02:09,480 --> 00:02:13,680
and it provides a type of link without semantics for free use ("relates to")

25
00:02:15,840 --> 00:02:22,920
in the figure, we see an example of an issue within the Jira tool 

26
00:02:22,920 --> 00:02:27,480
the data fields are common and found in other tracking tools

27
00:02:27,480 --> 00:02:29,340
for example, each issue

28
00:02:29,340 --> 00:02:34,020
has a unique identifier that does not change throughout the lifecycle and does not repeat itself

29
00:02:34,020 --> 00:02:39,360
in addition to pre-defined (built-in) issue types, issue link types and fields,

30
00:02:39,360 --> 00:02:42,960
some tools allow you to create custom elements

31
00:02:42,960 --> 00:02:49,980
for example, the "Description" field is pre-defined in Jira, while the "Justification" is a

32
00:02:49,980 --> 00:02:54,900
custom field based on the SAIM model (that we discussed in the previous training)

33
00:02:55,800 --> 00:02:59,760
the use of these custom fields allows you to associate more precise semantics

34
00:03:01,200 --> 00:03:03,240
to the data filled in the issue

35
00:03:03,240 --> 00:03:06,000
another example is the type of

36
00:03:06,000 --> 00:03:13,080
issue "Story", which is already pre-defined in Jira and can be used to represent "Requirements"

37
00:03:13,080 --> 00:03:16,320
however, the representation of "Hazards"

38
00:03:18,420 --> 00:03:22,320
of the SAIM model doesn't fit properly with any of the pre-defined types,

39
00:03:22,320 --> 00:03:29,400
so we set up an issue type called "Hazard" for a more accurate representation

40
00:03:30,600 --> 00:03:32,940
and finally, in a similar way,

41
00:03:32,940 --> 00:03:38,340
we created the custom issue link types to represent the SAIM model relationships

42
00:03:38,340 --> 00:03:44,940
in the figure, the issue "GPCA-10" is a "Requirement" that has a mitigation link with two "Hazards"

43
00:03:47,280 --> 00:03:51,480
these tools also bring a series of features for searching and filtering information,

44
00:03:51,480 --> 00:03:58,020
including the creation of queries or advanced filters (we will see an example later in this video)

45
00:03:59,220 --> 00:04:04,620
we customize an instance of Jira to incorporate the semantics of the SAIM model,

46
00:04:04,620 --> 00:04:10,680
four specific types of issues were created while we reused others,

47
00:04:10,680 --> 00:04:16,080
such as the issue type "Story" that we use to represent the requirements,

48
00:04:16,080 --> 00:04:24,000
we also customized fields to represent the "Assumptions" and "Justifications" associated with issues

49
00:04:24,000 --> 00:04:29,460
and, finally, we customized specific issue link types for the semantics

50
00:04:29,460 --> 00:04:31,620
of the SAIM model, as shown in the table

51
00:04:33,720 --> 00:04:38,160
let's now make a quick presentation of the custom Jira instance

52
00:04:40,740 --> 00:04:45,720
This is the home page of Jira, displaying the issues of a project

53
00:04:47,100 --> 00:04:50,820
the project is named OpenPCA

54
00:04:51,780 --> 00:04:57,000
it is related to the exemplo we discussed in previous training

55
00:04:58,260 --> 00:05:02,160
Each project in Jira has some

56
00:05:02,160 --> 00:05:05,760
different views/perspectives over the set of issues

57
00:05:05,760 --> 00:05:10,920
this one is the backlog view, that lists all the issues that are open,

58
00:05:11,880 --> 00:05:20,580
and there is a view where I can see all the issues together:

59
00:05:20,580 --> 00:05:24,270
the "All Issues" view

60
00:05:24,270 --> 00:05:30,960
There are a series of filtering and data organization options, for example, I can

61
00:05:30,960 --> 00:05:41,520
sort by unique identifier, sort by summary, sort by labels

62
00:05:41,520 --> 00:05:47,640
In this example shown,  the "Stories" are mapped as "Requirements" and the

63
00:05:47,640 --> 00:05:55,080
stories that have the label "safety" are mapped as "Safety Requirements"

64
00:05:55,080 --> 00:05:59,520
we can also have a view sorted by Components,

65
00:06:06,840 --> 00:06:12,900
we can also have a view sorted by issue types, for example,

66
00:06:13,920 --> 00:06:22,080
the "Context" issues appear first, then "Design Definition", "Hazards", and "Stories"

67
00:06:23,820 --> 00:06:30,180
Let's open one of these stories

68
00:06:31,440 --> 00:06:39,420
This is the display of a Story, it contains a description. This requirement has no

69
00:06:39,420 --> 00:06:48,330
rationale associated with it, but is related to other issues by the "is refined by"

70
00:06:48,330 --> 00:06:58,620
relationship, i.e. the issues "12", "11", and "55" are refinements of the issue "8"

71
00:07:05,340 --> 00:07:10,440
Apart from browsing through the issues, I may search for specific information using text search

72
00:07:14,940 --> 00:07:19,500
for example, any issue containing "minimum" intervals

73
00:07:19,500 --> 00:07:30,600
I found the story "24", which represents the minimum time between doses of analgesics

74
00:07:30,600 --> 00:07:38,340
requested by patients, the issue has a description and there is a justification associated

75
00:07:38,340 --> 00:07:44,220
which explains why this requirement is important for the design of the system

76
00:07:45,480 --> 00:07:55,200
and for each issue there are the related links, this requirement "24" 

77
00:07:55,200 --> 00:08:05,640
mitigates the Hazard "31" and refines the requirement "22", which is a high-level requirement,

78
00:08:07,200 --> 00:08:12,960
let's open Hazard "31". We see the description of the Hazard,

79
00:08:15,060 --> 00:08:20,280
here we see information on which are the requirements in the system design that

80
00:08:20,280 --> 00:08:26,580
can lead to this "Hazard" , i.e., that cause this Harzard,

81
00:08:28,320 --> 00:08:35,340
as we showed before, the requirement "24" is mitigating this hazard

82
00:08:35,340 --> 00:08:42,780
Also, there is the pre-defined "relates to" relationship, that we reuse to associate "Contexts" to other issues,

83
00:08:42,780 --> 00:08:47,160
this relationship has no semantics in Jira,

84
00:08:47,160 --> 00:08:52,500
so it was given a semantics to be the "contextualizes" relationship,

85
00:08:52,500 --> 00:08:59,580
so we skip the creation of a new custom relationship

86
00:09:00,960 --> 00:09:11,280
This is a "Context" issue, we have an attachment that is a Hazard Analysis 

87
00:09:11,280 --> 00:09:22,200
associated with the design, and there is another attachment that is a "Source" that documents this "Context"

88
00:09:23,280 --> 00:09:28,140
this "Context" is related to a series of "Hazards", as a result

89
00:09:28,140 --> 00:09:30,480
of the hazard analysis that was carried out

90
00:09:32,280 --> 00:09:39,780
so these are the basic features that every good IST brings for users,

91
00:09:39,780 --> 00:09:49,740
In order to browse this repository of knowledge, the collection of issues that are registered in the system

92
00:09:49,740 --> 00:09:53,340
you can also apply some filters, for example, 

93
00:09:55,440 --> 00:09:58,200
I want to filter the issue list by Hazards,

94
00:09:58,200 --> 00:10:04,500
so you already have a filter in the IST, which lists only the issues that are of the Hazards type

95
00:10:11,400 --> 00:10:18,840
If I want to filter all the Design Definition issues,

96
00:10:18,840 --> 00:10:23,760
there is also a filter 

97
00:10:31,800 --> 00:10:39,960
and also there is a series of other fields that can be used as filter criteria

98
00:10:44,220 --> 00:10:50,040
this was the walkthrough in the custom Atlassian Jira tool for the SAIM model

99
00:10:51,840 --> 00:10:56,340
We described how an IST can support the management of

100
00:10:56,340 --> 00:11:00,120
assurance information in an integrated way with the other project information

101
00:11:01,980 --> 00:11:09,960
IST has features that support their use as a knowledge repository,

102
00:11:09,960 --> 00:11:15,540
such as search and filtering, data exporting,

103
00:11:15,540 --> 00:11:22,200
and customization, 

104
00:11:22,200 --> 00:11:26,040
which allows users to manage information with richer semantics.

105
00:11:26,040 --> 00:11:28,260
Thank you for your attention.

