1
00:00:00,900 --> 00:00:06,720
Hi, welcome to the short training 1.1!

2
00:00:08,340 --> 00:00:13,500
this video presents the Safety Assurance Information Model.

3
00:00:14,280 --> 00:00:25,020
we will start by reviewing some general concepts, then we present the information model, and finally we present an illustrative example of the use of the model.

4
00:00:28,320 --> 00:00:39,300
the first concept is "Safety", which refers to the absence of unacceptable risks in the design and implementation of a critical system.

5
00:00:39,300 --> 00:00:57,720
"Safety assurance" refers to the systematic and planned actions, activities and processes that are necessary to provide adequate confidence that the product, service or system under development has achieved an acceptable level of safety.

6
00:01:01,020 --> 00:01:15,600
"Information model" refers to a representation of concepts and relationships, constraints, rules and operations that specify the semantics for a given set of data within an application domain.

7
00:01:17,940 --> 00:01:31,200
What is the Safety Assurance Information Model? The purpose of this information model is to represent critical system project development information.

8
00:01:33,300 --> 00:01:48,540
The model focuses on information that is relevant to quality assessment and safety assurance activities, especially Assurance Case development activities. The model combines three perspectives:

9
00:01:48,540 --> 00:01:54,900
1) The model requirements traceability reference model by Ramesh & Jarke,

10
00:01:54,900 --> 00:02:00,660
2) the requirements metamodel focused on security requirements by Vilela,

11
00:02:00,660 --> 00:02:08,020
and 3) the Assurance Cases specification model based on GSN notation.

12
00:02:08,020 --> 00:02:11,800
We provide links to these works in the video description.

13
00:02:13,080 --> 00:02:16,800
This is the metamodel.

14
00:02:20,340 --> 00:02:45,480
the main concept is "Object". which refer to any type of input or output of the system development process at the level of granularity that the team decided to manage them. "Sources" are any type of external artifact that is linked to "Objects" but which are not managed within the tools.

15
00:02:47,220 --> 00:03:04,560
the "documents" relationship can link a "Source" to an "Object" that it documents the other types of elements that appear in the model are recurring concepts in the modeling of safety requirements.

16
00:03:07,680 --> 00:03:14,040
"Requirements" represent the expected conditions or capabilities that the system must satisfy.

17
00:03:15,540 --> 00:03:22,140
"Hazards" represent system states that can lead to accidents or cause harm.

18
00:03:25,200 --> 00:03:43,680
"Safety Requirements" is a subtype of "Requirement" that is related to safety aspects the "mitigates" relationship links the "Safety Requirement" to the "Hazards" they address.

19
00:03:46,200 --> 00:03:55,080
"Definition Design" is a design decision that specifies or constrains parts of the system or some component.

20
00:03:56,220 --> 00:04:03,000
the "realizes" relationship links a "Design Definition" to the "Requirements" it realizes.

21
00:04:05,760 --> 00:04:17,700
"Components" are units of architecture, modules or system code at any level the team has decided to track. There are two relationships linked to "Components".

22
00:04:17,700 --> 00:04:22,800
the "allocates" relationship links a "Component" to the "Requirements" that are assigned to it.

23
00:04:23,420 --> 00:04:32,220
and the "implements" relationship links a "Component" to "Design Definitions" that are implemented by it.

24
00:04:34,920 --> 00:04:40,140
"Causes" is any "Object" that produces some kind of "Hazard" as its effect.

25
00:04:40,140 --> 00:04:49,720
For example, a new "Requirement" or "Design Definition" may cause a "Hazard" so it should be mapped also as a "Cause".

26
00:04:51,600 --> 00:04:57,420
the "causes" relationship links any "Object" to "Hazards" that are caused by it.

27
00:04:59,460 --> 00:05:04,200
"Contexts" are environmental or operational conditions that are relevant to safety.

28
00:05:05,200 --> 00:05:10,020
"Objects" that contextualizes others are represented by the "contextualizes" relationship.

29
00:05:12,960 --> 00:05:29,760
"Rationale" is an explanation that provides additional information for some "Object". One of the types is "Justification", that is an explanation about a decision related to requirements, design or hazards.

30
00:05:29,760 --> 00:05:37,740
"Assumption" is an explanation that assumes a common domain situation held true by stakeholders.

31
00:05:37,740 --> 00:05:44,340
"Strategy" is an explanation of mitigation approaches or related argumentation.

32
00:05:45,320 --> 00:05:51,960
"Rationales" can be linked to other "Objects" through the "explains" relationship.

33
00:05:54,540 --> 00:05:58,860
the model also includes attributes for the "Objects".

34
00:05:58,860 --> 00:06:15,720
these attributes represent data information commonly stored in management tools and are helpful to leverage the analysis of project data automatically extracted from project management tools.

35
00:06:18,780 --> 00:06:34,380
we will now present an illustrative example of how the model can be used to represent data from a critical system project. the example is related to the design of a patient-controlled analgesic infusion pump used within a clinical setting.

36
00:06:35,400 --> 00:06:48,180
we will discuss the part of the design related to the notification of caregivers that is triggered in the event of detecting of imminent battery exhaustion.

37
00:06:50,580 --> 00:06:58,380
the diagram models the system according to the Safety Assurance Information Model.

38
00:07:00,540 --> 00:07:06,180
Hazard of battery exhaustion is part of a group of hazards related to under-infusion.

39
00:07:06,180 --> 00:07:13,740
it occurs when the patient receives less analgesic doses than prescribed.

40
00:07:13,740 --> 00:07:19,260
in the example, the hazard of under-infusion is represented as the object H 1.

41
00:07:22,020 --> 00:07:29,280
the hazard of battery exhaustion is represented as object H 2 that refines the hazard H 1.

42
00:07:31,320 --> 00:07:41,940
In order to mitigate the hazard H 2, the safety requirement R 1 concerning notification function for caregivers has been defined.

43
00:07:44,280 --> 00:07:57,120
assumption A 1 presents a rationale for requirement R 1, the assumption provides an explanation regarding the advance required in triggering the notification.

44
00:07:58,740 --> 00:08:05,520
requirement R 1 is allocated in component "Comp3" concerning the notification module.

45
00:08:05,520 --> 00:08:09,480
all these information items can be modeled using the Model.

46
00:08:12,660 --> 00:08:19,260
So, requirement R 1 is refined into a low-level requirement called R 4.

47
00:08:19,260 --> 00:08:29,340
requirement R 4 details how the exhaustion notification will work by specifying the criteria for triggering the notification. 

48
00:08:29,340 --> 00:08:39,720
Finally requirement R 4 has evidence associated with its implementation and testing. In this case, they are external artifacts mapped as "Sources".

49
00:08:41,460 --> 00:08:52,200
we concluded the quick training. the objective was to show how safety information can be managed together with other project information.

50
00:08:52,200 --> 00:08:58,080
the model serves as a guide for the organization of project information.

51
00:08:58,080 --> 00:09:03,840
the model was planned to be lean and be extended according to the particularities of each project.

52
00:09:03,840 --> 00:09:06,060
Thanks for your attention and participation!
